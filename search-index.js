var searchIndex = {};
searchIndex['dbus'] = {"items":[[0,"","dbus","D-Bus bindings for Rust",null,null],[3,"Message","","A D-Bus message. A message contains some headers (e g sender and destination address)\nand a list of MessageItems.",null,null],[3,"OwnedFd","","An RAII wrapper around Fd to ensure that file descriptor is closed\nwhen the scope ends.",null,null],[3,"PropHandler","","Wrapper around Props that keeps a map of fetched properties.",null,null],[3,"Props","","Client side properties - get and set properties on a remote application.",null,null],[3,"Error","","D-Bus Error wrapper",null,null],[3,"ConnectionItems","","ConnectionItem iterator",null,null],[3,"Connection","","A D-Bus connection. Start here if you want to get on the D-Bus!",null,null],[4,"BusType","","",null,null],[13,"Session","","",0,null],[13,"System","","",0,null],[13,"Starter","","",0,null],[4,"NameFlag","","",null,null],[13,"AllowReplacement","","",1,null],[13,"ReplaceExisting","","",1,null],[13,"DoNotQueue","","",1,null],[4,"RequestNameReply","","",null,null],[13,"PrimaryOwner","","",2,null],[13,"InQueue","","",2,null],[13,"Exists","","",2,null],[13,"AlreadyOwner","","",2,null],[4,"ReleaseNameReply","","",null,null],[13,"Released","","",3,null],[13,"NonExistent","","",3,null],[13,"NotOwner","","",3,null],[4,"MessageType","","",null,null],[13,"Invalid","","",4,null],[13,"MethodCall","","",4,null],[13,"MethodReturn","","",4,null],[13,"Error","","",4,null],[13,"Signal","","",4,null],[4,"MessageItem","","MessageItem - used as parameters and return values from\nmethod calls, or as data added to a signal.",null,null],[13,"Array","","A D-Bus array requires all elements to be of the same type.\nAll elements must match the TypeSig.",5,null],[13,"Struct","","A D-Bus struct allows for values of different types.",5,null],[13,"Variant","","A D-Bus variant is a wrapper around another `MessageItem`, which\ncan be of any type.",5,null],[13,"DictEntry","","A D-Bus dictionary is an Array of DictEntry items.",5,null],[13,"ObjectPath","","A D-Bus objectpath requires its content to be a valid objectpath,\nso not all strings are allowed here.",5,null],[13,"Str","","",5,null],[13,"Bool","","",5,null],[13,"Byte","","",5,null],[13,"Int16","","",5,null],[13,"Int32","","",5,null],[13,"Int64","","",5,null],[13,"UInt16","","",5,null],[13,"UInt32","","",5,null],[13,"UInt64","","",5,null],[13,"Double","","",5,null],[13,"UnixFd","","D-Bus allows for sending file descriptors, which can be used to\nset up SHM, unix pipes, or other communication channels.",5,null],[4,"ArrayError","","",null,null],[13,"EmptyArray","","",6,null],[13,"DifferentElementTypes","","",6,null],[4,"ConnectionItem","","When listening for incoming events on the D-Bus, this enum will tell you what type\nof incoming event has happened.",null,null],[13,"Nothing","","",7,null],[13,"MethodCall","","",7,null],[13,"Signal","","",7,null],[11,"clone","","",0,{"inputs":[{"name":"bustype"}],"output":{"name":"dbusbustype"}}],[11,"eq","","",0,{"inputs":[{"name":"bustype"},{"name":"dbusbustype"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"bustype"},{"name":"dbusbustype"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"bustype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"nameflag"}],"output":{"name":"dbusnameflag"}}],[11,"eq","","",1,{"inputs":[{"name":"nameflag"},{"name":"dbusnameflag"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"nameflag"},{"name":"dbusnameflag"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"nameflag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"requestnamereply"}],"output":{"name":"dbusrequestnamereply"}}],[11,"eq","","",2,{"inputs":[{"name":"requestnamereply"},{"name":"dbusrequestnamereply"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"requestnamereply"},{"name":"dbusrequestnamereply"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"requestnamereply"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"releasenamereply"}],"output":{"name":"dbusreleasenamereply"}}],[11,"eq","","",3,{"inputs":[{"name":"releasenamereply"},{"name":"dbusreleasenamereply"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"releasenamereply"},{"name":"dbusreleasenamereply"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"releasenamereply"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"messagetype"}],"output":{"name":"dbusmessagetype"}}],[11,"eq","","",4,{"inputs":[{"name":"messagetype"},{"name":"dbusmessagetype"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"messagetype"},{"name":"dbusmessagetype"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"messagetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"arrayerror"}],"output":{"name":"arrayerror"}}],[11,"fmt","","",6,{"inputs":[{"name":"arrayerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"ownedfd"},{"name":"ownedfd"}],"output":{"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"ownedfd"},{"name":"ownedfd"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"ownedfd"},{"name":"ownedfd"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"ownedfd"},{"name":"ownedfd"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"ownedfd"},{"name":"ownedfd"}],"output":{"name":"bool"}}],[11,"eq","","",8,{"inputs":[{"name":"ownedfd"},{"name":"ownedfd"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"ownedfd"},{"name":"ownedfd"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"ownedfd"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",8,{"inputs":[{"name":"ownedfd"},{"name":"rawfd"}],"output":{"name":"ownedfd"}}],[11,"into_fd","","",8,{"inputs":[{"name":"ownedfd"}],"output":{"name":"rawfd"}}],[11,"drop","","",8,{"inputs":[{"name":"ownedfd"}],"output":null}],[11,"clone","","",8,{"inputs":[{"name":"ownedfd"}],"output":{"name":"ownedfd"}}],[11,"as_raw_fd","","",8,{"inputs":[{"name":"ownedfd"}],"output":{"name":"rawfd"}}],[11,"clone","","",5,{"inputs":[{"name":"messageitem"}],"output":{"name":"messageitem"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"messageitem"},{"name":"messageitem"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"messageitem"},{"name":"messageitem"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"messageitem"},{"name":"messageitem"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"messageitem"},{"name":"messageitem"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"messageitem"},{"name":"messageitem"}],"output":{"name":"bool"}}],[11,"eq","","",5,{"inputs":[{"name":"messageitem"},{"name":"messageitem"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"messageitem"},{"name":"messageitem"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"messageitem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"type_sig","","",5,{"inputs":[{"name":"messageitem"}],"output":{"name":"typesig"}}],[11,"array_type","","",5,{"inputs":[{"name":"messageitem"}],"output":{"name":"i32"}}],[11,"from_dict","","Creates a (String, Variant) dictionary from an iterator with Result passthrough (an Err will abort and return that Err)",5,{"inputs":[{"name":"messageitem"},{"name":"i"}],"output":{"name":"result"}}],[11,"new_array","","Creates an MessageItem::Array from a list of MessageItems.",5,{"inputs":[{"name":"messageitem"},{"name":"vec"}],"output":{"name":"result"}}],[11,"inner","","Conveniently get the inner value of a `MessageItem`",5,{"inputs":[{"name":"messageitem"}],"output":{"name":"result"}}],[11,"from","","",5,{"inputs":[{"name":"messageitem"},{"name":"u8"}],"output":{"name":"messageitem"}}],[11,"from","","",5,{"inputs":[{"name":"messageitem"},{"name":"u64"}],"output":{"name":"messageitem"}}],[11,"from","","",5,{"inputs":[{"name":"messageitem"},{"name":"u32"}],"output":{"name":"messageitem"}}],[11,"from","","",5,{"inputs":[{"name":"messageitem"},{"name":"u16"}],"output":{"name":"messageitem"}}],[11,"from","","",5,{"inputs":[{"name":"messageitem"},{"name":"i16"}],"output":{"name":"messageitem"}}],[11,"from","","",5,{"inputs":[{"name":"messageitem"},{"name":"i32"}],"output":{"name":"messageitem"}}],[11,"from","","",5,{"inputs":[{"name":"messageitem"},{"name":"i64"}],"output":{"name":"messageitem"}}],[11,"from","","",5,{"inputs":[{"name":"messageitem"},{"name":"f64"}],"output":{"name":"messageitem"}}],[11,"from","","",5,{"inputs":[{"name":"messageitem"},{"name":"bool"}],"output":{"name":"messageitem"}}],[11,"from","","",5,{"inputs":[{"name":"messageitem"},{"name":"string"}],"output":{"name":"messageitem"}}],[11,"from","","",5,{"inputs":[{"name":"messageitem"},{"name":"ownedfd"}],"output":{"name":"messageitem"}}],[11,"from","","",5,{"inputs":[{"name":"messageitem"},{"name":"box"}],"output":{"name":"messageitem"}}],[11,"from","","",5,null],[11,"new_method_call","","",9,{"inputs":[{"name":"message"},{"name":"str"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"option"}}],[11,"new_signal","","",9,{"inputs":[{"name":"message"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"option"}}],[11,"new_method_return","","",9,{"inputs":[{"name":"message"},{"name":"message"}],"output":{"name":"option"}}],[11,"new_error","","",9,{"inputs":[{"name":"message"},{"name":"message"},{"name":"str"},{"name":"str"}],"output":{"name":"option"}}],[11,"get_items","","",9,{"inputs":[{"name":"message"}],"output":{"name":"vec"}}],[11,"get_serial","","",9,{"inputs":[{"name":"message"}],"output":{"name":"u32"}}],[11,"append_items","","",9,null],[11,"msg_type","","",9,{"inputs":[{"name":"message"}],"output":{"name":"messagetype"}}],[11,"sender","","",9,{"inputs":[{"name":"message"}],"output":{"name":"option"}}],[11,"headers","","Returns a tuple of (Message type, Path, Interface, Member) of the current message.",9,null],[11,"as_result","","When the remote end returns an error, the message itself is correct but its contents\nis an error. This method will transform such an error to a D-Bus Error or otherwise\nreturn the original message.",9,{"inputs":[{"name":"message"}],"output":{"name":"result"}}],[11,"drop","","",9,{"inputs":[{"name":"message"}],"output":null}],[11,"fmt","","",9,{"inputs":[{"name":"message"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",10,{"inputs":[{"name":"props"},{"name":"connection"},{"name":"str"},{"name":"str"},{"name":"str"},{"name":"i32"}],"output":{"name":"props"}}],[11,"get","","",10,{"inputs":[{"name":"props"},{"name":"str"}],"output":{"name":"result"}}],[11,"set","","",10,{"inputs":[{"name":"props"},{"name":"str"},{"name":"messageitem"}],"output":{"name":"result"}}],[11,"get_all","","",10,{"inputs":[{"name":"props"}],"output":{"name":"result"}}],[11,"new","","",11,{"inputs":[{"name":"prophandler"},{"name":"props"}],"output":{"name":"prophandler"}}],[11,"get_all","","",11,{"inputs":[{"name":"prophandler"}],"output":{"name":"result"}}],[11,"map_mut","","",11,{"inputs":[{"name":"prophandler"}],"output":{"name":"btreemap"}}],[11,"map","","",11,{"inputs":[{"name":"prophandler"}],"output":{"name":"btreemap"}}],[11,"get","","",11,{"inputs":[{"name":"prophandler"},{"name":"str"}],"output":{"name":"result"}}],[11,"set","","",11,{"inputs":[{"name":"prophandler"},{"name":"str"},{"name":"messageitem"}],"output":{"name":"result"}}],[11,"get","","",5,{"inputs":[{"name":"messageitem"}],"output":{"name":"propertygetresult"}}],[0,"obj","","Contains functionality for the \"server\" of a D-Bus object. A remote application can\nintrospect this object and call methods on it.",null,null],[3,"ObjectPath","dbus::obj","Represents a D-Bus object path, which can in turn contain Interfaces.",null,null],[3,"Interface","","Interfaces can contain Methods, Properties, and Signals.",null,null],[3,"Property","","Properties that a remote application can get/set.",null,null],[3,"Signal","","Declares that an Interface can send this signal",null,null],[3,"Argument","","a Method has a list of Arguments.",null,null],[3,"Method","","a method that can be called from another application",null,null],[6,"MethodHandler","","A boxed closure for dynamic dispatch. It is called when the method is\ncalled by a remote application.",null,null],[6,"MethodResult","","A method returns either a list of MessageItems, or an error - the tuple\nrepresents the name and message of the Error.",null,null],[6,"PropertyGetResult","","",null,null],[6,"PropertySetResult","","",null,null],[8,"PropertyROHandler","","",null,null],[10,"get","","",12,{"inputs":[{"name":"propertyrohandler"}],"output":{"name":"propertygetresult"}}],[8,"PropertyRWHandler","","",null,null],[10,"get","","",13,{"inputs":[{"name":"propertyrwhandler"}],"output":{"name":"propertygetresult"}}],[10,"set","","",13,{"inputs":[{"name":"propertyrwhandler"},{"name":"messageitem"}],"output":{"name":"propertysetresult"}}],[8,"PropertyWOHandler","","",null,null],[10,"set","","",14,{"inputs":[{"name":"propertywohandler"},{"name":"messageitem"}],"output":{"name":"propertysetresult"}}],[6,"TypeSig","dbus","A TypeSig describes the type of a MessageItem.",null,null],[8,"FromMessageItem","","Helper trait for `MessageItem::inner()`",null,null],[10,"from","","",15,{"inputs":[{"name":"frommessageitem"},{"name":"messageitem"}],"output":{"name":"result"}}],[11,"new_custom","","",16,{"inputs":[{"name":"error"},{"name":"str"},{"name":"str"}],"output":{"name":"error"}}],[11,"name","","Error name/type, e g 'org.freedesktop.DBus.Error.Failed'",16,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"message","","Custom message, e g 'Could not find a matching object path'",16,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"drop","","",16,{"inputs":[{"name":"error"}],"output":null}],[11,"fmt","","",16,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",16,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"fmt","","",16,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"connectionitem"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Item","","",null,null],[11,"next","","",17,{"inputs":[{"name":"connectionitems"}],"output":{"name":"option"}}],[11,"get_private","","Creates a new D-Bus connection.",18,{"inputs":[{"name":"connection"},{"name":"bustype"}],"output":{"name":"result"}}],[11,"send_with_reply_and_block","","Sends a message over the D-Bus and waits for a reply.\nThis is usually used for method calls.",18,{"inputs":[{"name":"connection"},{"name":"message"},{"name":"i32"}],"output":{"name":"result"}}],[11,"send","","Sends a message over the D-Bus without waiting. Useful for sending replies to a method call.",18,{"inputs":[{"name":"connection"},{"name":"message"}],"output":{"name":"result"}}],[11,"unique_name","","",18,{"inputs":[{"name":"connection"}],"output":{"name":"string"}}],[11,"iter","","",18,{"inputs":[{"name":"connection"},{"name":"i32"}],"output":{"name":"connectionitems"}}],[11,"register_object_path","","",18,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"result"}}],[11,"unregister_object_path","","",18,{"inputs":[{"name":"connection"},{"name":"str"}],"output":null}],[11,"list_registered_object_paths","","",18,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"vec"}}],[11,"register_name","","",18,{"inputs":[{"name":"connection"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"release_name","","",18,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"result"}}],[11,"add_match","","",18,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"result"}}],[11,"remove_match","","",18,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"result"}}],[11,"drop","","",18,{"inputs":[{"name":"connection"}],"output":null}],[11,"fmt","","",18,{"inputs":[{"name":"connection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","dbus::obj","",19,null],[11,"new","","",20,null],[11,"new","","",21,null],[11,"new_ro","","Creates a new read-only Property",22,null],[11,"new_rw","","Creates a new read-write Property",22,null],[11,"new_wo","","Creates a new write-only Property",22,null],[11,"new","","",23,null],[11,"drop","","",24,null],[11,"new","","",24,null],[11,"insert_interface","","",24,null],[11,"is_registered","","",24,null],[11,"set_registered","","",24,null],[11,"handle_message","","Handles a method call if the object path matches.\nReturn value: None => not handled (no match),\nSome(Err(())) => message reply send failed,\nSome(Ok()) => message reply send ok */",24,null]],"paths":[[4,"BusType"],[4,"NameFlag"],[4,"RequestNameReply"],[4,"ReleaseNameReply"],[4,"MessageType"],[4,"MessageItem"],[4,"ArrayError"],[4,"ConnectionItem"],[3,"OwnedFd"],[3,"Message"],[3,"Props"],[3,"PropHandler"],[8,"PropertyROHandler"],[8,"PropertyRWHandler"],[8,"PropertyWOHandler"],[8,"FromMessageItem"],[3,"Error"],[3,"ConnectionItems"],[3,"Connection"],[3,"Argument"],[3,"Signal"],[3,"Method"],[3,"Property"],[3,"Interface"],[3,"ObjectPath"]]};
initSearch(searchIndex);
