var searchIndex = {};
searchIndex['dbus'] = {"items":[[3,"Message","dbus","A D-Bus message. A message contains some headers (e g sender and destination address)\nand a list of MessageItems.",null,null],[3,"OwnedFd","","An RAII wrapper around Fd to ensure that file descriptor is closed\nwhen the scope ends.",null,null],[3,"PropHandler","","Wrapper around Props that keeps a map of fetched properties.",null,null],[3,"Props","","Client side properties - get and set properties on a remote application.",null,null],[3,"Watch","","A file descriptor to watch for incoming events (for async I/O)",null,null],[3,"Signature","","A wrapper around a string that is guaranteed to be\na valid (single) D-Bus type signature. Supersedes TypeSig.",null,null],[3,"Path","","A wrapper around a string that is guaranteed to be\na valid D-Bus object path.",null,null],[3,"Interface","","A wrapper around a string that is guaranteed to be\na valid D-Bus interface name.",null,null],[3,"Member","","A wrapper around a string that is guaranteed to be\na valid D-Bus member, i e, a signal or method name.",null,null],[3,"ErrorName","","A wrapper around a string that is guaranteed to be\na valid D-Bus bus name.",null,null],[3,"BusName","","A wrapper around a string that is guaranteed to be\na valid D-Bus bus name.",null,null],[3,"Error","","D-Bus Error wrapper",null,null],[3,"ConnectionItems","","ConnectionItem iterator",null,null],[3,"Connection","","A D-Bus connection. Start here if you want to get on the D-Bus!",null,null],[4,"BusType","","",null,null],[13,"Session","","",0,null],[13,"System","","",0,null],[13,"Starter","","",0,null],[4,"NameFlag","","",null,null],[13,"AllowReplacement","","",1,null],[13,"ReplaceExisting","","",1,null],[13,"DoNotQueue","","",1,null],[4,"RequestNameReply","","",null,null],[13,"PrimaryOwner","","",2,null],[13,"InQueue","","",2,null],[13,"Exists","","",2,null],[13,"AlreadyOwner","","",2,null],[4,"ReleaseNameReply","","",null,null],[13,"Released","","",3,null],[13,"NonExistent","","",3,null],[13,"NotOwner","","",3,null],[4,"MessageType","","",null,null],[13,"Invalid","","",4,null],[13,"MethodCall","","",4,null],[13,"MethodReturn","","",4,null],[13,"Error","","",4,null],[13,"Signal","","",4,null],[4,"WatchEvent","","",null,null],[13,"Readable","","",5,null],[13,"Writable","","",5,null],[13,"Error","","",5,null],[13,"Hangup","","",5,null],[4,"MessageItem","","MessageItem - used as parameters and return values from\nmethod calls, or as data added to a signal.",null,null],[13,"Array","","A D-Bus array requires all elements to be of the same type.\nAll elements must match the TypeSig.",6,null],[13,"Struct","","A D-Bus struct allows for values of different types.",6,null],[13,"Variant","","A D-Bus variant is a wrapper around another `MessageItem`, which\ncan be of any type.",6,null],[13,"DictEntry","","A D-Bus dictionary is an Array of DictEntry items.",6,null],[13,"ObjectPath","","A D-Bus objectpath requires its content to be a valid objectpath,\nso this cannot be any string.",6,null],[13,"Str","","A D-Bus String is zero terminated, so no \\0 s in the String, please.\n(D-Bus strings are also - like Rust strings - required to be valid UTF-8.)",6,null],[13,"Bool","","",6,null],[13,"Byte","","",6,null],[13,"Int16","","",6,null],[13,"Int32","","",6,null],[13,"Int64","","",6,null],[13,"UInt16","","",6,null],[13,"UInt32","","",6,null],[13,"UInt64","","",6,null],[13,"Double","","",6,null],[13,"UnixFd","","D-Bus allows for sending file descriptors, which can be used to\nset up SHM, unix pipes, or other communication channels.",6,null],[4,"ArrayError","","",null,null],[13,"EmptyArray","","",7,null],[13,"DifferentElementTypes","","",7,null],[4,"ConnectionItem","","When listening for incoming events on the D-Bus, this enum will tell you what type\nof incoming event has happened.",null,null],[13,"Nothing","","No event between now and timeout",8,null],[13,"MethodCall","","Incoming method call",8,null],[13,"Signal","","Incoming signal",8,null],[13,"MethodReturn","","Incoming method return (mostly used for Async I/O)",8,null],[13,"WatchFd","","Indicates whether a file descriptor should be monitored or not.\nUnless you're doing Async I/O, you can simply ignore this variant.",8,null],[11,"clone","","",0,{"inputs":[{"name":"bustype"}],"output":{"name":"dbusbustype"}}],[11,"eq","","",0,{"inputs":[{"name":"bustype"},{"name":"dbusbustype"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"bustype"},{"name":"dbusbustype"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"bustype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"nameflag"}],"output":{"name":"dbusnameflag"}}],[11,"eq","","",1,{"inputs":[{"name":"nameflag"},{"name":"dbusnameflag"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"nameflag"},{"name":"dbusnameflag"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"nameflag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"requestnamereply"}],"output":{"name":"dbusrequestnamereply"}}],[11,"eq","","",2,{"inputs":[{"name":"requestnamereply"},{"name":"dbusrequestnamereply"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"requestnamereply"},{"name":"dbusrequestnamereply"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"requestnamereply"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"releasenamereply"}],"output":{"name":"dbusreleasenamereply"}}],[11,"eq","","",3,{"inputs":[{"name":"releasenamereply"},{"name":"dbusreleasenamereply"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"releasenamereply"},{"name":"dbusreleasenamereply"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"releasenamereply"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"messagetype"}],"output":{"name":"dbusmessagetype"}}],[11,"eq","","",4,{"inputs":[{"name":"messagetype"},{"name":"dbusmessagetype"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"messagetype"},{"name":"dbusmessagetype"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"messagetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"watchevent"}],"output":{"name":"dbuswatchevent"}}],[11,"eq","","",5,{"inputs":[{"name":"watchevent"},{"name":"dbuswatchevent"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"watchevent"},{"name":"dbuswatchevent"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"watchevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"arrayerror"}],"output":{"name":"arrayerror"}}],[11,"fmt","","",7,{"inputs":[{"name":"arrayerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"ownedfd"},{"name":"ownedfd"}],"output":{"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"ownedfd"},{"name":"ownedfd"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"ownedfd"},{"name":"ownedfd"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"ownedfd"},{"name":"ownedfd"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"ownedfd"},{"name":"ownedfd"}],"output":{"name":"bool"}}],[11,"eq","","",9,{"inputs":[{"name":"ownedfd"},{"name":"ownedfd"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"ownedfd"},{"name":"ownedfd"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"ownedfd"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",9,{"inputs":[{"name":"ownedfd"},{"name":"rawfd"}],"output":{"name":"ownedfd"}}],[11,"into_fd","","",9,{"inputs":[{"name":"ownedfd"}],"output":{"name":"rawfd"}}],[11,"drop","","",9,{"inputs":[{"name":"ownedfd"}],"output":null}],[11,"clone","","",9,{"inputs":[{"name":"ownedfd"}],"output":{"name":"ownedfd"}}],[11,"as_raw_fd","","",9,{"inputs":[{"name":"ownedfd"}],"output":{"name":"rawfd"}}],[11,"clone","","",6,{"inputs":[{"name":"messageitem"}],"output":{"name":"messageitem"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"messageitem"},{"name":"messageitem"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"messageitem"},{"name":"messageitem"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"messageitem"},{"name":"messageitem"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"messageitem"},{"name":"messageitem"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"messageitem"},{"name":"messageitem"}],"output":{"name":"bool"}}],[11,"eq","","",6,{"inputs":[{"name":"messageitem"},{"name":"messageitem"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"messageitem"},{"name":"messageitem"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"messageitem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"type_sig","","",6,{"inputs":[{"name":"messageitem"}],"output":{"name":"typesig"}}],[11,"array_type","","",6,{"inputs":[{"name":"messageitem"}],"output":{"name":"i32"}}],[11,"from_dict","","Creates a (String, Variant) dictionary from an iterator with Result passthrough (an Err will abort and return that Err)",6,{"inputs":[{"name":"messageitem"},{"name":"i"}],"output":{"name":"result"}}],[11,"new_array","","Creates an MessageItem::Array from a list of MessageItems.",6,{"inputs":[{"name":"messageitem"},{"name":"vec"}],"output":{"name":"result"}}],[11,"inner","","Conveniently get the inner value of a `MessageItem`",6,{"inputs":[{"name":"messageitem"}],"output":{"name":"result"}}],[11,"from","","",6,{"inputs":[{"name":"messageitem"},{"name":"u8"}],"output":{"name":"messageitem"}}],[11,"from","","",6,{"inputs":[{"name":"messageitem"},{"name":"u64"}],"output":{"name":"messageitem"}}],[11,"from","","",6,{"inputs":[{"name":"messageitem"},{"name":"u32"}],"output":{"name":"messageitem"}}],[11,"from","","",6,{"inputs":[{"name":"messageitem"},{"name":"u16"}],"output":{"name":"messageitem"}}],[11,"from","","",6,{"inputs":[{"name":"messageitem"},{"name":"i16"}],"output":{"name":"messageitem"}}],[11,"from","","",6,{"inputs":[{"name":"messageitem"},{"name":"i32"}],"output":{"name":"messageitem"}}],[11,"from","","",6,{"inputs":[{"name":"messageitem"},{"name":"i64"}],"output":{"name":"messageitem"}}],[11,"from","","",6,{"inputs":[{"name":"messageitem"},{"name":"f64"}],"output":{"name":"messageitem"}}],[11,"from","","",6,{"inputs":[{"name":"messageitem"},{"name":"bool"}],"output":{"name":"messageitem"}}],[11,"from","","",6,null],[11,"from","","",6,{"inputs":[{"name":"messageitem"},{"name":"str"}],"output":{"name":"messageitem"}}],[11,"from","","",6,{"inputs":[{"name":"messageitem"},{"name":"string"}],"output":{"name":"messageitem"}}],[11,"from","","",6,{"inputs":[{"name":"messageitem"},{"name":"path"}],"output":{"name":"messageitem"}}],[11,"from","","",6,{"inputs":[{"name":"messageitem"},{"name":"ownedfd"}],"output":{"name":"messageitem"}}],[11,"from","","",6,{"inputs":[{"name":"messageitem"},{"name":"box"}],"output":{"name":"messageitem"}}],[11,"from","","",6,null],[11,"new_method_call","","Creates a new method call message.",10,{"inputs":[{"name":"message"},{"name":"d"},{"name":"p"},{"name":"i"},{"name":"m"}],"output":{"name":"result"}}],[11,"method_call","","Creates a new method call message.",10,{"inputs":[{"name":"message"},{"name":"busname"},{"name":"path"},{"name":"interface"},{"name":"member"}],"output":{"name":"message"}}],[11,"new_signal","","Creates a new signal message.",10,{"inputs":[{"name":"message"},{"name":"p"},{"name":"i"},{"name":"m"}],"output":{"name":"result"}}],[11,"signal","","Creates a new signal message.",10,{"inputs":[{"name":"message"},{"name":"path"},{"name":"interface"},{"name":"member"}],"output":{"name":"message"}}],[11,"new_method_return","","Creates a method reply for this method call.",10,{"inputs":[{"name":"message"},{"name":"message"}],"output":{"name":"option"}}],[11,"method_return","","Creates a method return (reply) for this method call.",10,{"inputs":[{"name":"message"}],"output":{"name":"message"}}],[11,"new_error","","",10,{"inputs":[{"name":"message"},{"name":"message"},{"name":"str"},{"name":"str"}],"output":{"name":"option"}}],[11,"error","","Creates a new error reply",10,{"inputs":[{"name":"message"},{"name":"errorname"},{"name":"cstr"}],"output":{"name":"message"}}],[11,"get_items","","",10,{"inputs":[{"name":"message"}],"output":{"name":"vec"}}],[11,"get_serial","","",10,{"inputs":[{"name":"message"}],"output":{"name":"u32"}}],[11,"get_reply_serial","","",10,{"inputs":[{"name":"message"}],"output":{"name":"option"}}],[11,"append_items","","",10,null],[11,"append","","Appends one MessageItem to a message.\nUse in builder style: e g `m.method_return().append(7i32)`",10,{"inputs":[{"name":"message"},{"name":"i"}],"output":{"name":"self"}}],[11,"msg_type","","",10,{"inputs":[{"name":"message"}],"output":{"name":"messagetype"}}],[11,"sender","","",10,{"inputs":[{"name":"message"}],"output":{"name":"option"}}],[11,"headers","","Returns a tuple of (Message type, Path, Interface, Member) of the current message.",10,null],[11,"path","","",10,{"inputs":[{"name":"message"}],"output":{"name":"option"}}],[11,"interface","","",10,{"inputs":[{"name":"message"}],"output":{"name":"option"}}],[11,"member","","",10,{"inputs":[{"name":"message"}],"output":{"name":"option"}}],[11,"as_result","","When the remote end returns an error, the message itself is correct but its contents\nis an error. This method will transform such an error to a D-Bus Error or otherwise\nreturn the original message.",10,{"inputs":[{"name":"message"}],"output":{"name":"result"}}],[11,"drop","","",10,{"inputs":[{"name":"message"}],"output":null}],[11,"fmt","","",10,{"inputs":[{"name":"message"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",11,{"inputs":[{"name":"props"},{"name":"connection"},{"name":"n"},{"name":"p"},{"name":"i"},{"name":"i32"}],"output":{"name":"props"}}],[11,"get","","",11,{"inputs":[{"name":"props"},{"name":"str"}],"output":{"name":"result"}}],[11,"set","","",11,{"inputs":[{"name":"props"},{"name":"str"},{"name":"messageitem"}],"output":{"name":"result"}}],[11,"get_all","","",11,{"inputs":[{"name":"props"}],"output":{"name":"result"}}],[11,"new","","",12,{"inputs":[{"name":"prophandler"},{"name":"props"}],"output":{"name":"prophandler"}}],[11,"get_all","","",12,{"inputs":[{"name":"prophandler"}],"output":{"name":"result"}}],[11,"map_mut","","",12,{"inputs":[{"name":"prophandler"}],"output":{"name":"btreemap"}}],[11,"map","","",12,{"inputs":[{"name":"prophandler"}],"output":{"name":"btreemap"}}],[11,"get","","",12,{"inputs":[{"name":"prophandler"},{"name":"str"}],"output":{"name":"result"}}],[11,"set","","",12,{"inputs":[{"name":"prophandler"},{"name":"str"},{"name":"messageitem"}],"output":{"name":"result"}}],[11,"get","","",6,{"inputs":[{"name":"messageitem"}],"output":{"name":"propertygetresult"}}],[11,"cmp","","",13,{"inputs":[{"name":"watch"},{"name":"watch"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"watch"},{"name":"watch"}],"output":{"name":"option"}}],[11,"lt","","",13,{"inputs":[{"name":"watch"},{"name":"watch"}],"output":{"name":"bool"}}],[11,"le","","",13,{"inputs":[{"name":"watch"},{"name":"watch"}],"output":{"name":"bool"}}],[11,"gt","","",13,{"inputs":[{"name":"watch"},{"name":"watch"}],"output":{"name":"bool"}}],[11,"ge","","",13,{"inputs":[{"name":"watch"},{"name":"watch"}],"output":{"name":"bool"}}],[11,"eq","","",13,{"inputs":[{"name":"watch"},{"name":"watch"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"watch"},{"name":"watch"}],"output":{"name":"bool"}}],[11,"fmt","","",13,{"inputs":[{"name":"watch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"watch"}],"output":{"name":"watch"}}],[11,"fd","","",13,{"inputs":[{"name":"watch"}],"output":{"name":"rawfd"}}],[11,"readable","","Add POLLIN to events to listen for",13,{"inputs":[{"name":"watch"}],"output":{"name":"bool"}}],[11,"writable","","Add POLLOUT to events to listen for",13,{"inputs":[{"name":"watch"}],"output":{"name":"bool"}}],[11,"as_raw_fd","","",13,{"inputs":[{"name":"watch"}],"output":{"name":"rawfd"}}],[11,"clone","","",14,{"inputs":[{"name":"signature"}],"output":{"name":"signature"}}],[11,"cmp","","",14,{"inputs":[{"name":"signature"},{"name":"signature"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"signature"},{"name":"signature"}],"output":{"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"signature"},{"name":"signature"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"signature"},{"name":"signature"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"signature"},{"name":"signature"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"signature"},{"name":"signature"}],"output":{"name":"bool"}}],[11,"eq","","",14,{"inputs":[{"name":"signature"},{"name":"signature"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"signature"},{"name":"signature"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"signature"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",14,{"inputs":[{"name":"signature"},{"name":"s"}],"output":{"name":"result"}}],[11,"from","","",14,{"inputs":[{"name":"signature"},{"name":"string"}],"output":{"name":"signature"}}],[11,"from","","",14,{"inputs":[{"name":"signature"},{"name":"string"}],"output":{"name":"signature"}}],[11,"from","","",14,{"inputs":[{"name":"signature"},{"name":"str"}],"output":{"name":"signature"}}],[11,"deref","","",14,{"inputs":[{"name":"signature"}],"output":{"name":"str"}}],[11,"fmt","","",14,{"inputs":[{"name":"signature"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",14,{"inputs":[{"name":"signature"}],"output":{"name":"cstr"}}],[11,"clone","","",15,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"cmp","","",15,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"lt","","",15,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"le","","",15,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"gt","","",15,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"ge","","",15,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"eq","","",15,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"fmt","","",15,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",15,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"result"}}],[11,"from","","",15,{"inputs":[{"name":"path"},{"name":"string"}],"output":{"name":"path"}}],[11,"from","","",15,{"inputs":[{"name":"path"},{"name":"string"}],"output":{"name":"path"}}],[11,"from","","",15,{"inputs":[{"name":"path"},{"name":"str"}],"output":{"name":"path"}}],[11,"deref","","",15,{"inputs":[{"name":"path"}],"output":{"name":"str"}}],[11,"fmt","","",15,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",15,{"inputs":[{"name":"path"}],"output":{"name":"cstr"}}],[11,"default","","",15,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"clone","","",16,{"inputs":[{"name":"member"}],"output":{"name":"member"}}],[11,"cmp","","",16,{"inputs":[{"name":"member"},{"name":"member"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"member"},{"name":"member"}],"output":{"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"member"},{"name":"member"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"member"},{"name":"member"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"member"},{"name":"member"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"member"},{"name":"member"}],"output":{"name":"bool"}}],[11,"eq","","",16,{"inputs":[{"name":"member"},{"name":"member"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"member"},{"name":"member"}],"output":{"name":"bool"}}],[11,"fmt","","",16,{"inputs":[{"name":"member"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",16,{"inputs":[{"name":"member"},{"name":"s"}],"output":{"name":"result"}}],[11,"from","","",16,{"inputs":[{"name":"member"},{"name":"string"}],"output":{"name":"member"}}],[11,"from","","",16,{"inputs":[{"name":"member"},{"name":"string"}],"output":{"name":"member"}}],[11,"from","","",16,{"inputs":[{"name":"member"},{"name":"str"}],"output":{"name":"member"}}],[11,"deref","","",16,{"inputs":[{"name":"member"}],"output":{"name":"str"}}],[11,"fmt","","",16,{"inputs":[{"name":"member"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",16,{"inputs":[{"name":"member"}],"output":{"name":"cstr"}}],[11,"clone","","",17,{"inputs":[{"name":"interface"}],"output":{"name":"interface"}}],[11,"cmp","","",17,{"inputs":[{"name":"interface"},{"name":"interface"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"interface"},{"name":"interface"}],"output":{"name":"option"}}],[11,"lt","","",17,{"inputs":[{"name":"interface"},{"name":"interface"}],"output":{"name":"bool"}}],[11,"le","","",17,{"inputs":[{"name":"interface"},{"name":"interface"}],"output":{"name":"bool"}}],[11,"gt","","",17,{"inputs":[{"name":"interface"},{"name":"interface"}],"output":{"name":"bool"}}],[11,"ge","","",17,{"inputs":[{"name":"interface"},{"name":"interface"}],"output":{"name":"bool"}}],[11,"eq","","",17,{"inputs":[{"name":"interface"},{"name":"interface"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"interface"},{"name":"interface"}],"output":{"name":"bool"}}],[11,"fmt","","",17,{"inputs":[{"name":"interface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",17,{"inputs":[{"name":"interface"},{"name":"s"}],"output":{"name":"result"}}],[11,"from","","",17,{"inputs":[{"name":"interface"},{"name":"string"}],"output":{"name":"interface"}}],[11,"from","","",17,{"inputs":[{"name":"interface"},{"name":"string"}],"output":{"name":"interface"}}],[11,"from","","",17,{"inputs":[{"name":"interface"},{"name":"str"}],"output":{"name":"interface"}}],[11,"deref","","",17,{"inputs":[{"name":"interface"}],"output":{"name":"str"}}],[11,"fmt","","",17,{"inputs":[{"name":"interface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",17,{"inputs":[{"name":"interface"}],"output":{"name":"cstr"}}],[11,"clone","","",18,{"inputs":[{"name":"busname"}],"output":{"name":"busname"}}],[11,"cmp","","",18,{"inputs":[{"name":"busname"},{"name":"busname"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",18,{"inputs":[{"name":"busname"},{"name":"busname"}],"output":{"name":"option"}}],[11,"lt","","",18,{"inputs":[{"name":"busname"},{"name":"busname"}],"output":{"name":"bool"}}],[11,"le","","",18,{"inputs":[{"name":"busname"},{"name":"busname"}],"output":{"name":"bool"}}],[11,"gt","","",18,{"inputs":[{"name":"busname"},{"name":"busname"}],"output":{"name":"bool"}}],[11,"ge","","",18,{"inputs":[{"name":"busname"},{"name":"busname"}],"output":{"name":"bool"}}],[11,"eq","","",18,{"inputs":[{"name":"busname"},{"name":"busname"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"busname"},{"name":"busname"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"busname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",18,{"inputs":[{"name":"busname"},{"name":"s"}],"output":{"name":"result"}}],[11,"from","","",18,{"inputs":[{"name":"busname"},{"name":"string"}],"output":{"name":"busname"}}],[11,"from","","",18,{"inputs":[{"name":"busname"},{"name":"string"}],"output":{"name":"busname"}}],[11,"from","","",18,{"inputs":[{"name":"busname"},{"name":"str"}],"output":{"name":"busname"}}],[11,"deref","","",18,{"inputs":[{"name":"busname"}],"output":{"name":"str"}}],[11,"fmt","","",18,{"inputs":[{"name":"busname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",18,{"inputs":[{"name":"busname"}],"output":{"name":"cstr"}}],[11,"clone","","",19,{"inputs":[{"name":"errorname"}],"output":{"name":"errorname"}}],[11,"cmp","","",19,{"inputs":[{"name":"errorname"},{"name":"errorname"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"errorname"},{"name":"errorname"}],"output":{"name":"option"}}],[11,"lt","","",19,{"inputs":[{"name":"errorname"},{"name":"errorname"}],"output":{"name":"bool"}}],[11,"le","","",19,{"inputs":[{"name":"errorname"},{"name":"errorname"}],"output":{"name":"bool"}}],[11,"gt","","",19,{"inputs":[{"name":"errorname"},{"name":"errorname"}],"output":{"name":"bool"}}],[11,"ge","","",19,{"inputs":[{"name":"errorname"},{"name":"errorname"}],"output":{"name":"bool"}}],[11,"eq","","",19,{"inputs":[{"name":"errorname"},{"name":"errorname"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"errorname"},{"name":"errorname"}],"output":{"name":"bool"}}],[11,"fmt","","",19,{"inputs":[{"name":"errorname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",19,{"inputs":[{"name":"errorname"},{"name":"s"}],"output":{"name":"result"}}],[11,"from","","",19,{"inputs":[{"name":"errorname"},{"name":"string"}],"output":{"name":"errorname"}}],[11,"from","","",19,{"inputs":[{"name":"errorname"},{"name":"string"}],"output":{"name":"errorname"}}],[11,"from","","",19,{"inputs":[{"name":"errorname"},{"name":"str"}],"output":{"name":"errorname"}}],[11,"deref","","",19,{"inputs":[{"name":"errorname"}],"output":{"name":"str"}}],[11,"fmt","","",19,{"inputs":[{"name":"errorname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",19,{"inputs":[{"name":"errorname"}],"output":{"name":"cstr"}}],[0,"obj","","Contains functionality for the \"server\" of a D-Bus object. A remote application can\nintrospect this object and call methods on it.\nDeprecated - use the `tree` module instead.",null,null],[3,"ObjectPath","dbus::obj","Represents a D-Bus object path, which can in turn contain Interfaces.",null,null],[3,"Interface","","Interfaces can contain Methods, Properties, and Signals.",null,null],[3,"Property","","Properties that a remote application can get/set.",null,null],[3,"Signal","","Declares that an Interface can send this signal",null,null],[3,"Argument","","a Method has a list of Arguments.",null,null],[3,"Method","","a method that can be called from another application",null,null],[6,"MethodHandler","","A boxed closure for dynamic dispatch. It is called when the method is\ncalled by a remote application.",null,null],[6,"MethodResult","","A method returns either a list of MessageItems, or an error - the tuple\nrepresents the name and message of the Error.",null,null],[6,"PropertyGetResult","","",null,null],[6,"PropertySetResult","","",null,null],[8,"PropertyROHandler","","",null,null],[10,"get","","",20,{"inputs":[{"name":"propertyrohandler"}],"output":{"name":"propertygetresult"}}],[8,"PropertyRWHandler","","",null,null],[10,"get","","",21,{"inputs":[{"name":"propertyrwhandler"}],"output":{"name":"propertygetresult"}}],[10,"set","","",21,{"inputs":[{"name":"propertyrwhandler"},{"name":"messageitem"}],"output":{"name":"propertysetresult"}}],[8,"PropertyWOHandler","","",null,null],[10,"set","","",22,{"inputs":[{"name":"propertywohandler"},{"name":"messageitem"}],"output":{"name":"propertysetresult"}}],[0,"tree","dbus","Contains functionality for dispatching methods on a D-Bus \"server\".\nSupersedes the `obj` module. Properties are somewhat still WIP,\nbut should in any case be better than `obj` already.",null,null],[3,"Factory","dbus::tree","The factory is used to create object paths, interfaces, methods etc.",null,null],[3,"Tree","","A collection of object paths.",null,null],[3,"TreeServer","","An iterator adapter that handles incoming method calls.",null,null],[3,"ObjectPath","","",null,null],[3,"Interface","","",null,null],[3,"Signal","","",null,null],[3,"Property","","",null,null],[3,"Method","","",null,null],[3,"MethodErr","","",null,null],[3,"Argument","","",null,null],[3,"MethodFn","","A MethodType that wraps an Fn function",null,null],[3,"MethodFnMut","","A MethodType that wraps an FnMut function. Calling this recursively will cause a refcell panic.",null,null],[3,"MethodSync","","A MethodType that wraps an Fn+Send+Sync function, so it can be called from several threads in parallel.",null,null],[4,"EmitsChangedSignal","","",null,null],[13,"True","","",23,null],[13,"Invalidates","","",23,null],[13,"Const","","",23,null],[13,"False","","",23,null],[4,"Access","","",null,null],[13,"Read","","",24,null],[13,"ReadWrite","","",24,null],[13,"Write","","",24,null],[6,"MethodResult","","",null,null],[6,"TypeSig","dbus","A TypeSig describes the type of a MessageItem.",null,null],[8,"FromMessageItem","","Helper trait for `MessageItem::inner()`",null,null],[10,"from","","",25,{"inputs":[{"name":"frommessageitem"},{"name":"messageitem"}],"output":{"name":"result"}}],[11,"new_custom","","",26,{"inputs":[{"name":"error"},{"name":"str"},{"name":"str"}],"output":{"name":"error"}}],[11,"name","","Error name/type, e g 'org.freedesktop.DBus.Error.Failed'",26,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"message","","Custom message, e g 'Could not find a matching object path'",26,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"drop","","",26,{"inputs":[{"name":"error"}],"output":null}],[11,"fmt","","",26,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",26,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"fmt","","",26,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"connectionitem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",27,{"inputs":[{"name":"connectionitems"}],"output":{"name":"option"}}],[11,"get_private","","Creates a new D-Bus connection.",28,{"inputs":[{"name":"connection"},{"name":"bustype"}],"output":{"name":"result"}}],[11,"send_with_reply_and_block","","Sends a message over the D-Bus and waits for a reply.\nThis is usually used for method calls.",28,{"inputs":[{"name":"connection"},{"name":"message"},{"name":"i32"}],"output":{"name":"result"}}],[11,"send","","Sends a message over the D-Bus without waiting. Useful for sending signals and method call replies.",28,{"inputs":[{"name":"connection"},{"name":"message"}],"output":{"name":"result"}}],[11,"unique_name","","",28,{"inputs":[{"name":"connection"}],"output":{"name":"string"}}],[11,"iter","","Check if there are new incoming events",28,{"inputs":[{"name":"connection"},{"name":"i32"}],"output":{"name":"connectionitems"}}],[11,"register_object_path","","",28,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"result"}}],[11,"unregister_object_path","","",28,{"inputs":[{"name":"connection"},{"name":"str"}],"output":null}],[11,"list_registered_object_paths","","",28,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"vec"}}],[11,"register_name","","",28,{"inputs":[{"name":"connection"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"release_name","","",28,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"result"}}],[11,"add_match","","",28,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"result"}}],[11,"remove_match","","",28,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"result"}}],[11,"watch_fds","","Async I/O: Get an up-to-date list of file descriptors to watch.",28,{"inputs":[{"name":"connection"}],"output":{"name":"vec"}}],[11,"watch_handle","","Async I/O: Call this function whenever you detected an event on the Fd,\nFlags are a set of WatchEvent bits.\nThe returned iterator will return pending items only, never block for new events.",28,{"inputs":[{"name":"connection"},{"name":"rawfd"},{"name":"c_uint"}],"output":{"name":"connectionitems"}}],[11,"drop","","",28,{"inputs":[{"name":"connection"}],"output":null}],[11,"fmt","","",28,{"inputs":[{"name":"connection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","dbus::obj","",29,{"inputs":[{"name":"argument"},{"name":"str"},{"name":"t"}],"output":{"name":"argument"}}],[11,"new","","",30,{"inputs":[{"name":"signal"},{"name":"n"},{"name":"vec"}],"output":{"name":"signal"}}],[11,"annotate","","",30,{"inputs":[{"name":"signal"},{"name":"n"},{"name":"v"}],"output":null}],[11,"new","","",31,{"inputs":[{"name":"method"},{"name":"n"},{"name":"vec"},{"name":"vec"},{"name":"methodhandler"}],"output":{"name":"method"}}],[11,"annotate","","",31,{"inputs":[{"name":"method"},{"name":"n"},{"name":"v"}],"output":null}],[11,"new_ro","","Creates a new read-only Property",32,{"inputs":[{"name":"property"},{"name":"n"},{"name":"typesig"},{"name":"box"}],"output":{"name":"property"}}],[11,"new_rw","","Creates a new read-write Property",32,{"inputs":[{"name":"property"},{"name":"n"},{"name":"typesig"},{"name":"box"}],"output":{"name":"property"}}],[11,"new_wo","","Creates a new write-only Property",32,{"inputs":[{"name":"property"},{"name":"n"},{"name":"typesig"},{"name":"box"}],"output":{"name":"property"}}],[11,"annotate","","Add an annotation to the Property",32,{"inputs":[{"name":"property"},{"name":"n"},{"name":"v"}],"output":null}],[11,"new","","",33,{"inputs":[{"name":"interface"},{"name":"vec"},{"name":"vec"},{"name":"vec"}],"output":{"name":"interface"}}],[11,"drop","","",34,{"inputs":[{"name":"objectpath"}],"output":null}],[11,"new","","",34,{"inputs":[{"name":"objectpath"},{"name":"connection"},{"name":"str"},{"name":"bool"}],"output":{"name":"objectpath"}}],[11,"insert_interface","","",34,{"inputs":[{"name":"objectpath"},{"name":"n"},{"name":"interface"}],"output":null}],[11,"is_registered","","",34,{"inputs":[{"name":"objectpath"}],"output":{"name":"bool"}}],[11,"set_registered","","",34,{"inputs":[{"name":"objectpath"},{"name":"bool"}],"output":{"name":"result"}}],[11,"handle_message","","Handles a method call if the object path matches.\nReturn value: None => not handled (no match),\nSome(Err(())) => message reply send failed,\nSome(Ok()) => message reply send ok */",34,{"inputs":[{"name":"objectpath"},{"name":"message"}],"output":{"name":"option"}}],[11,"eq","dbus::tree","",35,{"inputs":[{"name":"argument"},{"name":"argument"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"argument"},{"name":"argument"}],"output":{"name":"bool"}}],[11,"cmp","","",35,{"inputs":[{"name":"argument"},{"name":"argument"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",35,{"inputs":[{"name":"argument"},{"name":"argument"}],"output":{"name":"option"}}],[11,"lt","","",35,{"inputs":[{"name":"argument"},{"name":"argument"}],"output":{"name":"bool"}}],[11,"le","","",35,{"inputs":[{"name":"argument"},{"name":"argument"}],"output":{"name":"bool"}}],[11,"gt","","",35,{"inputs":[{"name":"argument"},{"name":"argument"}],"output":{"name":"bool"}}],[11,"ge","","",35,{"inputs":[{"name":"argument"},{"name":"argument"}],"output":{"name":"bool"}}],[11,"fmt","","",35,{"inputs":[{"name":"argument"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"new","","",35,{"inputs":[{"name":"argument"},{"name":"option"},{"name":"signature"}],"output":{"name":"argument"}}],[11,"from","","",35,{"inputs":[{"name":"argument"},{"name":"signature"}],"output":{"name":"argument"}}],[11,"from","","",35,{"inputs":[{"name":"argument"},{"name":"str"}],"output":{"name":"argument"}}],[11,"from","","",35,null],[11,"eq","","",36,{"inputs":[{"name":"methoderr"},{"name":"methoderr"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"methoderr"},{"name":"methoderr"}],"output":{"name":"bool"}}],[11,"cmp","","",36,{"inputs":[{"name":"methoderr"},{"name":"methoderr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",36,{"inputs":[{"name":"methoderr"},{"name":"methoderr"}],"output":{"name":"option"}}],[11,"lt","","",36,{"inputs":[{"name":"methoderr"},{"name":"methoderr"}],"output":{"name":"bool"}}],[11,"le","","",36,{"inputs":[{"name":"methoderr"},{"name":"methoderr"}],"output":{"name":"bool"}}],[11,"gt","","",36,{"inputs":[{"name":"methoderr"},{"name":"methoderr"}],"output":{"name":"bool"}}],[11,"ge","","",36,{"inputs":[{"name":"methoderr"},{"name":"methoderr"}],"output":{"name":"bool"}}],[11,"fmt","","",36,{"inputs":[{"name":"methoderr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"methoderr"}],"output":{"name":"methoderr"}}],[11,"invalid_arg","","",36,{"inputs":[{"name":"methoderr"},{"name":"t"}],"output":{"name":"methoderr"}}],[11,"no_arg","","",36,{"inputs":[{"name":"methoderr"}],"output":{"name":"methoderr"}}],[11,"failed","","",36,{"inputs":[{"name":"methoderr"},{"name":"t"}],"output":{"name":"methoderr"}}],[11,"no_interface","","",36,{"inputs":[{"name":"methoderr"},{"name":"t"}],"output":{"name":"methoderr"}}],[11,"no_property","","",36,{"inputs":[{"name":"methoderr"},{"name":"t"}],"output":{"name":"methoderr"}}],[11,"ro_property","","",36,{"inputs":[{"name":"methoderr"},{"name":"t"}],"output":{"name":"methoderr"}}],[11,"from","","",36,null],[11,"fmt","","",37,{"inputs":[{"name":"methodfn"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"methodfnmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"methodsync"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"method"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"in_arg","","",40,{"inputs":[{"name":"method"},{"name":"a"}],"output":{"name":"self"}}],[11,"in_args","","",40,{"inputs":[{"name":"method"},{"name":"a"}],"output":{"name":"self"}}],[11,"out_arg","","",40,{"inputs":[{"name":"method"},{"name":"a"}],"output":{"name":"self"}}],[11,"out_args","","",40,{"inputs":[{"name":"method"},{"name":"a"}],"output":{"name":"self"}}],[11,"annotate","","Add an annotation to the method",40,{"inputs":[{"name":"method"},{"name":"n"},{"name":"v"}],"output":{"name":"self"}}],[11,"deprecated","","Add an annotation that this entity is deprecated.",40,{"inputs":[{"name":"method"}],"output":{"name":"self"}}],[11,"call","","",40,{"inputs":[{"name":"method"},{"name":"message"},{"name":"objectpath"},{"name":"tree"}],"output":{"name":"methodresult"}}],[11,"fmt","","",41,{"inputs":[{"name":"interface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"add_m","","Adds a method to the interface.",41,{"inputs":[{"name":"interface"},{"name":"method"}],"output":{"name":"self"}}],[11,"add_s","","Adds a signal to the interface.",41,{"inputs":[{"name":"interface"},{"name":"signal"}],"output":{"name":"self"}}],[11,"add_s_ref","","Adds a signal to the interface. Returns a reference to the signal\n(which you can use to emit the signal, once it belongs to an object path).",41,{"inputs":[{"name":"interface"},{"name":"signal"}],"output":{"name":"arc"}}],[11,"add_p","","Adds a property to the interface.",41,{"inputs":[{"name":"interface"},{"name":"property"}],"output":{"name":"self"}}],[11,"add_p_ref","","Adds a property to the interface. Returns a reference to the property\n(which you can use to get and set the current value of the property).",41,{"inputs":[{"name":"interface"},{"name":"property"}],"output":{"name":"arc"}}],[11,"annotate","","",41,{"inputs":[{"name":"interface"},{"name":"n"},{"name":"v"}],"output":{"name":"self"}}],[11,"deprecated","","Add an annotation that this entity is deprecated.",41,{"inputs":[{"name":"interface"}],"output":{"name":"self"}}],[11,"fmt","","",23,{"inputs":[{"name":"emitschangedsignal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",23,{"inputs":[{"name":"emitschangedsignal"},{"name":"emitschangedsignal"}],"output":{"name":"option"}}],[11,"lt","","",23,{"inputs":[{"name":"emitschangedsignal"},{"name":"emitschangedsignal"}],"output":{"name":"bool"}}],[11,"le","","",23,{"inputs":[{"name":"emitschangedsignal"},{"name":"emitschangedsignal"}],"output":{"name":"bool"}}],[11,"gt","","",23,{"inputs":[{"name":"emitschangedsignal"},{"name":"emitschangedsignal"}],"output":{"name":"bool"}}],[11,"ge","","",23,{"inputs":[{"name":"emitschangedsignal"},{"name":"emitschangedsignal"}],"output":{"name":"bool"}}],[11,"cmp","","",23,{"inputs":[{"name":"emitschangedsignal"},{"name":"emitschangedsignal"}],"output":{"name":"ordering"}}],[11,"eq","","",23,{"inputs":[{"name":"emitschangedsignal"},{"name":"emitschangedsignal"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"emitschangedsignal"},{"name":"emitschangedsignal"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"emitschangedsignal"}],"output":{"name":"emitschangedsignal"}}],[11,"fmt","","",24,{"inputs":[{"name":"access"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",24,{"inputs":[{"name":"access"},{"name":"access"}],"output":{"name":"option"}}],[11,"lt","","",24,{"inputs":[{"name":"access"},{"name":"access"}],"output":{"name":"bool"}}],[11,"le","","",24,{"inputs":[{"name":"access"},{"name":"access"}],"output":{"name":"bool"}}],[11,"gt","","",24,{"inputs":[{"name":"access"},{"name":"access"}],"output":{"name":"bool"}}],[11,"ge","","",24,{"inputs":[{"name":"access"},{"name":"access"}],"output":{"name":"bool"}}],[11,"cmp","","",24,{"inputs":[{"name":"access"},{"name":"access"}],"output":{"name":"ordering"}}],[11,"eq","","",24,{"inputs":[{"name":"access"},{"name":"access"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"access"},{"name":"access"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"access"}],"output":{"name":"access"}}],[11,"fmt","","",42,{"inputs":[{"name":"property"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_value","","",42,{"inputs":[{"name":"property"}],"output":{"name":"messageitem"}}],[11,"get_signal","","",42,{"inputs":[{"name":"property"}],"output":{"name":"option"}}],[11,"set_value","","Returns error if \"emits\" is \"Const\", and the property is in a tree.\nReturns messages to be sent over a connection, this could be the PropertiesChanged signal.",42,{"inputs":[{"name":"property"},{"name":"messageitem"}],"output":{"name":"result"}}],[11,"emits_changed","","",42,{"inputs":[{"name":"property"},{"name":"emitschangedsignal"}],"output":{"name":"self"}}],[11,"access","","",42,{"inputs":[{"name":"property"},{"name":"access"}],"output":{"name":"self"}}],[11,"remote_get","","",42,{"inputs":[{"name":"property"},{"name":"message"}],"output":{"name":"result"}}],[11,"verify_remote_set","","Helper method to verify and extract a MessageItem from a Set message",42,{"inputs":[{"name":"property"},{"name":"message"}],"output":{"name":"result"}}],[11,"annotate","","",42,{"inputs":[{"name":"property"},{"name":"n"},{"name":"v"}],"output":{"name":"self"}}],[11,"deprecated","","Add an annotation that this entity is deprecated.",42,{"inputs":[{"name":"property"}],"output":{"name":"self"}}],[11,"on_set","","Sets a callback to be called when a \"Set\" call is coming in from the remote side.\nMight change to something more ergonomic.\nFor multi-thread use.",42,{"inputs":[{"name":"property"},{"name":"h"}],"output":{"name":"self"}}],[11,"on_set","","Sets a callback to be called when a \"Set\" call is coming in from the remote side.\nMight change to something more ergonomic.\nFor single-thread use.",42,{"inputs":[{"name":"property"},{"name":"h"}],"output":{"name":"self"}}],[11,"on_set","","Sets a callback to be called when a \"Set\" call is coming in from the remote side.\nMight change to something more ergonomic.\nFor single-thread use.",42,{"inputs":[{"name":"property"},{"name":"h"}],"output":{"name":"self"}}],[11,"fmt","","",43,{"inputs":[{"name":"signal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"emit","","Returns a message which emits the signal when sent.\nPanics if the signal is not inserted in an object path.",43,null],[11,"arg","","",43,{"inputs":[{"name":"signal"},{"name":"a"}],"output":{"name":"self"}}],[11,"args","","",43,{"inputs":[{"name":"signal"},{"name":"a"}],"output":{"name":"self"}}],[11,"annotate","","",43,{"inputs":[{"name":"signal"},{"name":"n"},{"name":"v"}],"output":{"name":"self"}}],[11,"deprecated","","Add an annotation that this entity is deprecated.",43,{"inputs":[{"name":"signal"}],"output":{"name":"self"}}],[11,"fmt","","",44,{"inputs":[{"name":"objectpath"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"add","","",44,{"inputs":[{"name":"objectpath"},{"name":"interface"}],"output":{"name":"self"}}],[11,"introspectable","","Adds introspection support for this object path.",44,{"inputs":[{"name":"objectpath"}],"output":{"name":"self"}}],[11,"object_manager","","Adds ObjectManager support for this object path.",44,{"inputs":[{"name":"objectpath"}],"output":{"name":"self"}}],[11,"next","","",45,{"inputs":[{"name":"treeserver"}],"output":{"name":"option"}}],[11,"fmt","","",46,{"inputs":[{"name":"tree"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"add","","",46,{"inputs":[{"name":"tree"},{"name":"objectpath"}],"output":{"name":"self"}}],[11,"set_registered","","Registers or unregisters all object paths in the tree.",46,{"inputs":[{"name":"tree"},{"name":"connection"},{"name":"bool"}],"output":{"name":"result"}}],[11,"handle","","Handles a message. Will return None in case the object path was not\nfound, or otherwise a list of messages to be sent back.",46,{"inputs":[{"name":"tree"},{"name":"message"}],"output":{"name":"option"}}],[11,"run","","This method takes an `ConnectionItem` iterator (you get it from `Connection::iter()`)\nand handles all matching items. Non-matching items (e g signals) are passed through.",46,{"inputs":[{"name":"tree"},{"name":"connection"},{"name":"i"}],"output":{"name":"treeserver"}}],[11,"clone","","",47,{"inputs":[{"name":"factory"}],"output":{"name":"factory"}}],[11,"fmt","","",47,{"inputs":[{"name":"factory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_fn","","Creates a new factory for single-thread use.",47,{"inputs":[{"name":"factory"}],"output":{"name":"self"}}],[11,"method","","Creates a new method for single-thread use.",47,{"inputs":[{"name":"factory"},{"name":"t"},{"name":"h"}],"output":{"name":"method"}}],[11,"property","","",47,{"inputs":[{"name":"factory"},{"name":"t"},{"name":"i"}],"output":{"name":"property"}}],[11,"interface","","",47,{"inputs":[{"name":"factory"},{"name":"t"}],"output":{"name":"interface"}}],[11,"tree","","",47,{"inputs":[{"name":"factory"}],"output":{"name":"tree"}}],[11,"object_path","","",47,{"inputs":[{"name":"factory"},{"name":"t"}],"output":{"name":"objectpath"}}],[11,"new_fnmut","","Creates a new factory for single-thread + mutable fns use.",47,{"inputs":[{"name":"factory"}],"output":{"name":"self"}}],[11,"method","","Creates a new method for single-thread use.\nThis method can mutate its environment, so it will panic in case\nit is called recursively.",47,{"inputs":[{"name":"factory"},{"name":"t"},{"name":"h"}],"output":{"name":"method"}}],[11,"property","","",47,{"inputs":[{"name":"factory"},{"name":"t"},{"name":"i"}],"output":{"name":"property"}}],[11,"interface","","",47,{"inputs":[{"name":"factory"},{"name":"t"}],"output":{"name":"interface"}}],[11,"tree","","",47,{"inputs":[{"name":"factory"}],"output":{"name":"tree"}}],[11,"object_path","","",47,{"inputs":[{"name":"factory"},{"name":"t"}],"output":{"name":"objectpath"}}],[11,"new_sync","","Creates a new factory for multi-thread use.\nTrees created will be able to Send and Sync, i e,\nit can handle several messages in parallel.",47,{"inputs":[{"name":"factory"}],"output":{"name":"self"}}],[11,"method","","Creates a new method for multi-thread use.\nThis puts bounds on the callback to enable it to be called from several threads\nin parallel.",47,{"inputs":[{"name":"factory"},{"name":"t"},{"name":"h"}],"output":{"name":"method"}}],[11,"property","","",47,{"inputs":[{"name":"factory"},{"name":"t"},{"name":"i"}],"output":{"name":"property"}}],[11,"interface","","",47,{"inputs":[{"name":"factory"},{"name":"t"}],"output":{"name":"interface"}}],[11,"tree","","",47,{"inputs":[{"name":"factory"}],"output":{"name":"tree"}}],[11,"object_path","","",47,{"inputs":[{"name":"factory"},{"name":"t"}],"output":{"name":"objectpath"}}],[11,"signal","","",47,{"inputs":[{"name":"factory"},{"name":"t"}],"output":{"name":"signal"}}],[11,"method_sync","","Creates a new method with bounds enough to be used in all trees.",47,{"inputs":[{"name":"factory"},{"name":"t"},{"name":"h"}],"output":{"name":"method"}}]],"paths":[[4,"BusType"],[4,"NameFlag"],[4,"RequestNameReply"],[4,"ReleaseNameReply"],[4,"MessageType"],[4,"WatchEvent"],[4,"MessageItem"],[4,"ArrayError"],[4,"ConnectionItem"],[3,"OwnedFd"],[3,"Message"],[3,"Props"],[3,"PropHandler"],[3,"Watch"],[3,"Signature"],[3,"Path"],[3,"Member"],[3,"Interface"],[3,"BusName"],[3,"ErrorName"],[8,"PropertyROHandler"],[8,"PropertyRWHandler"],[8,"PropertyWOHandler"],[4,"EmitsChangedSignal"],[4,"Access"],[8,"FromMessageItem"],[3,"Error"],[3,"ConnectionItems"],[3,"Connection"],[3,"Argument"],[3,"Signal"],[3,"Method"],[3,"Property"],[3,"Interface"],[3,"ObjectPath"],[3,"Argument"],[3,"MethodErr"],[3,"MethodFn"],[3,"MethodFnMut"],[3,"MethodSync"],[3,"Method"],[3,"Interface"],[3,"Property"],[3,"Signal"],[3,"ObjectPath"],[3,"TreeServer"],[3,"Tree"],[3,"Factory"]]};
initSearch(searchIndex);
